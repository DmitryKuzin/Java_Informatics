package lib;

import java.io.FileInputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.*;
import java.util.Date;
import java.util.Properties;

/**
 * Created by kuzin on 10/23/2015.
 */
public class sqlDB {
       Library library;

    public Library getLibrary() {
        try {
            fillTheLibIn();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return library;
    }

    private static Connection getConnection() throws IOException, ClassNotFoundException, SQLException {
        Properties props = new Properties();                  // ??? ????? ??? ?????????? ?????? ? ?????
        props.load(new FileInputStream("data/db.properties"));     // ?????????? (????????) ?? ?????
        String driver = props.getProperty("driver");
        String url = props.getProperty("url");
        String user = props.getProperty("user");
        String pass = props.getProperty("pass");
        Class.forName(driver);                                // ???????? ???????????? ??????????? ????????
        return DriverManager.getConnection(url, user, pass);  // ???????? ?????????? ? ??
    }
    public static void create() throws SQLException, ClassNotFoundException,IOException {
        Connection connection=null;
        try{
            connection=getConnection();
            Statement statement=connection.createStatement();
            statement.executeUpdate("create table if not exists lib"+
                            "id bigint GENERATED BY DEFAULT  AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,"+
                            "book_name varchar,isbn varchar,author_name varchar,creation_date timestamp,price int"
            );
        }finally {
            if (connection != null) {
                connection.close();
            }
        }
    }
    private static void insertBook(String name,String isbn,String authorFIO, String creationDate,int price) throws SQLException, ClassNotFoundException, IOException {
        Connection connection = null;
        try {
            connection = getConnection();
            PreparedStatement statement = connection.prepareStatement("insert into lib (book_name,isbn,author_name, creation_date, price) values (?,?,?,?,?)");
            // ^ ??????????? ?????????? SQL-????????
            statement.setString(1, name);
            statement.setString(2, isbn);
            statement.setString(3, authorFIO);
            statement.setTimestamp(4, Timestamp.valueOf(creationDate));
            statement.setString(5, String.valueOf(price));
            statement.executeUpdate();
        } finally {
            if (connection != null) {
                connection.close();
            }
        }
    }
//    private static void update(Integer id, String address) throws SQLException, IOException, ClassNotFoundException {
//        Connection connection = null;
//        try {
//            connection = getConnection();
//            PreparedStatement statement = connection.prepareStatement("update lib set address = ? where id = ?");
//            // ^ ??????????? ?????????? SQL-????????
//            statement.setString(1, address);
//            statement.setInt(2, id);
//            statement.executeUpdate();
//        } finally {
//            if (connection != null) {
//                connection.close();
//            }
//        }
//    }
public void fillTheLibIn() throws ClassNotFoundException, IOException, SQLException {
    Connection connection = null;
    try {
        connection = getConnection();
        Statement statement = connection.createStatement();
        ResultSet resultSet = statement.executeQuery("select * from lib");
        // ^ ??? ???????? ??????? ??? ?? ??????????, ??? ???????? ??? ResultSet
        while (resultSet.next()) {  // ????????? ????????? ????? ?? -1, ????? ??????????
            // ??????? ?? ????? ?????? ? ??????? bool ????????
            long id = resultSet.getLong("id");
            String authorFIO = resultSet.getString("author_name");
            String bookName = resultSet.getString("book_name");
            String isbn = resultSet.getString("isbn");
            String date= resultSet.getTimestamp("creation_date").toString();
            int price= resultSet.getInt("price");
            library.addBook(authorFIO,new Book(isbn,bookName,date,new BigDecimal(price)));
        }
    } finally {
        if (connection != null) {
            connection.close();
        }
    }
}
}
